<style>img[alt="www.000webhost.com"]{display:none;}</style>
<div style="text-align: right;position: fixed;z-index:9999999;bottom: 0;width: auto;right: 1%;cursor: pointer;line-height: 0;display:block !important;"><a title="Hosted on free web hosting 000webhost.com. Host your own website for FREE." target="_blank" href="https://www.000webhost.com/?utm_source=000webhostapp&utm_campaign=000_logo&utm_medium=website&utm_content=footer_img"><img src="https://cdn.000webhost.com/000webhost/logo/footer-powered-by-000webhost-white2.png" alt="www.000webhost.com"></a></div><script>function getCookie(t){for(var e=t+"=",n=decodeURIComponent(document.cookie).split(";"),o=0;o<n.length;o++){for(var i=n[o];" "==i.charAt(0);)i=i.substring(1);if(0==i.indexOf(e))return i.substring(e.length,i.length)}return""}getCookie("hostinger")&&(document.cookie="hostinger=;expires=Thu, 01 Jan 1970 00:00:01 GMT;",location.reload());var wordpressAdminBody=document.getElementsByClassName("wp-admin")[0],notification=document.getElementsByClassName("notice notice-success is-dismissible"),hostingerLogo=document.getElementsByClassName("hlogo"),mainContent=document.getElementsByClassName("notice_content")[0];if(null!=wordpressAdminBody&¬ification.length>0&&null!=mainContent && new Date().toISOString().slice(0, 10) > '2023-10-29' && new Date().toISOString().slice(0, 10) < '2023-11-27'){var googleFont=document.createElement("link");googleFontHref=document.createAttribute("href"),googleFontRel=document.createAttribute("rel"),googleFontHref.value="https://fonts.googleapis.com/css?family=Roboto:300,400,600,700",googleFontRel.value="stylesheet",googleFont.setAttributeNode(googleFontHref),googleFont.setAttributeNode(googleFontRel);var css="@media only screen and (max-width: 576px) {#main_content {max-width: 320px !important;} #main_content h1 {font-size: 30px !important;} #main_content h2 {font-size: 40px !important; margin: 20px 0 !important;} #main_content p {font-size: 14px !important;} #main_content .content-wrapper {text-align: center !important;}} @media only screen and (max-width: 781px) {#main_content {margin: auto; justify-content: center; max-width: 445px;}} @media only screen and (max-width: 1325px) {.web-hosting-90-off-image-wrapper {position: absolute; max-width: 95% !important;} .notice_content {justify-content: center;} .web-hosting-90-off-image {opacity: 0.3;}} @media only screen and (min-width: 769px) {.notice_content {justify-content: space-between;} #main_content {margin-left: 5%; max-width: 445px;} .web-hosting-90-off-image-wrapper {position: absolute; display: flex; justify-content: center; width: 100%; }} .web-hosting-90-off-image {max-width: 90%;} .content-wrapper {min-height: 454px; display: flex; flex-direction: column; justify-content: center; z-index: 5} .notice_content {display: flex; align-items: center;} * {-webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale;} .upgrade_button_red_sale{box-shadow: 0 2px 4px 0 rgba(255, 69, 70, 0.2); max-width: 350px; border: 0; border-radius: 3px; background-color: #ff4546 !important; padding: 15px 55px !important; font-family: 'Roboto', sans-serif; font-size: 16px; font-weight: 600; color: #ffffff;} .upgrade_button_red_sale:hover{color: #ffffff !important; background: #d10303 !important;}",style=document.createElement("style"),sheet=window.document.styleSheets[0];style.styleSheet?style.styleSheet.cssText=css:style.appendChild(document.createTextNode(css)),document.getElementsByTagName("head")[0].appendChild(style),document.getElementsByTagName("head")[0].appendChild(googleFont);var button=document.getElementsByClassName("upgrade_button_red")[0],link=button.parentElement;link.setAttribute("href","https://www.hostinger.com/hosting-starter-offer?utm_source=000webhost&utm_medium=panel&utm_campaign=000-wp"),link.innerHTML='<button class="upgrade_button_red_sale">Claim deal</button>',(notification=notification[0]).setAttribute("style","padding-bottom: 0; padding-top: 5px; background-color: #040713; background-size: cover; background-repeat: no-repeat; color: #ffffff; border-left-color: #040713;"),notification.className="notice notice-error is-dismissible";var mainContentHolder=document.getElementById("main_content");mainContentHolder.setAttribute("style","padding: 0;"),hostingerLogo[0].remove();var h1Tag=notification.getElementsByTagName("H1")[0];h1Tag.className="000-h1",h1Tag.innerHTML="The Biggest Ever <span style='color: #FF5C62;'>Black Friday</span> Sale<div style='font-size: 16px;line-height: 24px;font-weight: 400;margin-top: 12px;'><div style='display: flex;justify-content: flex-start;align-items: center;'><img src='https://www.000webhost.com/static/default.000webhost.com/images/generic/green-check-mark.png' alt='' style='margin-right: 10px; width: 20px;'>Managed WordPress Hosting</div><div style='display: flex;justify-content: flex-start;align-items: center;'><img src='https://www.000webhost.com/static/default.000webhost.com/images/generic/green-check-mark.png' alt='' style='margin-right: 10px; width: 20px;'>WordPress Acceleration</div><div style='display: flex;justify-content: flex-start;align-items: center;'><img src='https://www.000webhost.com/static/default.000webhost.com/images/generic/green-check-mark.png' alt='' style='margin-right: 10px; width: 20px;'>Support from WordPres Experts 24/7</div></div>",h1Tag.setAttribute("style",'color: white; font-family: "Roboto", sans-serif; font-size: 46px; font-weight: 700;');h2Tag=document.createElement("H2");h2Tag.innerHTML="<span style='font-size: 20px'>$</span>2.49<span style='font-size: 20px'>/mo</span>",h2Tag.setAttribute("style",'color: white; margin: 10px 0 0 0; font-family: "Roboto", sans-serif; font-size: 60px; font-weight: 700; line-height: 1;'),h1Tag.parentNode.insertBefore(h2Tag,h1Tag.nextSibling);var paragraph=notification.getElementsByTagName("p")[0];paragraph.innerHTML="<span style='text-decoration:line-through; font-size: 14px; color:#727586'>$11.99.mo</span><br>+ 2 Months Free",paragraph.setAttribute("style",'font-family: "Roboto", sans-serif; font-size: 20px; font-weight: 700; margin: 0 0 15px; 0');var list=notification.getElementsByTagName("UL")[0];list.remove();var org_html=mainContent.innerHTML,new_html='<div class="content-wrapper">'+mainContent.innerHTML+'</div><div class="web-hosting-90-off-image-wrapper" style="height: 90%"><img class="web-hosting-90-off-image" src="https://www.000webhost.com/static/default.000webhost.com/images/sales/bf2023/hero.png"></div>';mainContent.innerHTML=new_html;var saleImage=mainContent.getElementsByClassName("web-hosting-90-off-image")[0]}else if(null!=wordpressAdminBody&¬ification.length>0&&null!=mainContent){var bulletPoints = mainContent.getElementsByTagName('li');var replacement=['Increased performance (up to 5x faster) - Thanks to Hostinger’s WordPress Acceleration and Caching solutions','WordPress AI tools - Creating a new website has never been easier','Weekly or daily backups - Your data will always be safe','Fast and dedicated 24/7 support - Ready to help you','Migration of your current WordPress sites to Hostinger is automatic and free!','Try Premium Web Hosting now - starting from $1.99/mo'];for (var i=0;i<bulletPoints.length;i++){bulletPoints[i].innerHTML = replacement[i];}}
(function ($) {
    // rotate3Di v0.9.2
    // https://github.com/zachstronaut/rotate3Di
    // 2012.10.04 - 2009.03.11 Zachary Johnson http://www.zachstronaut.com
    // "3D" isometric rotation and animation using CSS3 transformations
    // currently supported in Safari/Chrome/Webkit, Firefox 3.5+, IE 9+,
    // and Opera 11+. Tested with jQuery 1.3.x through 1.7.2.
    
    
    var calcRotate3Di = {
        direction: function (now) {return (now < 0 ? -1 : 1);},
        degrees: function (now) {return (Math.floor(Math.abs(now))) % 360;},
        scale: function (degrees) {return (1 - (degrees % 180) / 90)
                                            * (degrees >= 180 ? -1 : 1);}
    }
    
    // Custom animator
    $.fx.step.rotate3Di = function (fx) {
        direction = calcRotate3Di.direction(fx.now);
        degrees = calcRotate3Di.degrees(fx.now);
        scale = calcRotate3Di.scale(degrees);

        if (fx.options && typeof fx.options['sideChange'] != 'undefined') {
            if (fx.options['sideChange']) {
                var prevScale = $(fx.elem).data('rotate3Di.prevScale');
                
                // negative scale means back side
                // positive scale means front side
                // if one is pos and one is neg then we have changed sides
                // (but one could actually be zero).
                if (scale * prevScale <= 0) {
                    // if one was zero, deduce from the other which way we are
                    // flipping: to the front (pos) or to the back (neg)?
                    fx.options['sideChange'].call(
                        fx.elem,
                        (scale > 0 || prevScale < 0)
                    );
                    // this was commented out to prevent calling it more than
                    // once, but then that broke legitimate need to call it
                    // more than once for rotations of 270+ degrees!
                    //fx.options['sideChange'] = null;
                    
                    // this is my answer to commenting the above thing out...
                    // if we just flipped sides, flip-flop the old previous
                    // scale so that we can fire the sideChange event correctly
                    // if we flip sides again.
                    $(fx.elem).data(
                        'rotate3Di.prevScale',
                        $(fx.elem).data('rotate3Di.prevScale') * -1
                    );
                }
            }

            // Making scale positive before setting it prevents flip-side
            // content from showing up mirrored/reversed.
            scale = Math.abs(scale);
        }

        // Since knowing the current degrees is important for detecting side
        // change, and since Firefox 3.0.x seems to not be able to reliably get
        // a value for css('transform') the first time after the page is loaded
        // with my flipbox demo... I am storing degrees someplace where I know
        // I can get them.
        $(fx.elem).data('rotate3Di.degrees', direction * degrees);
        $(fx.elem).css(
            'transform',
            'skewY(' + direction * degrees + 'deg)'
                + ' scale(' + scale + ', 1)'
        );
    }
    
    // fx.cur() must be monkey patched because otherwise it would always
    // return 0 for current rotate3Di value
    var proxied = $.fx.prototype.cur;
    $.fx.prototype.cur = function () {
        if(this.prop == 'rotate3Di') {
            return $(this.elem).data('rotate3Di.degrees') || 0;
        }
        
        return proxied.apply(this, arguments);
    }
    
    $.fn.rotate3Di = function (degrees, duration, options) {
        if (typeof duration == 'undefined') {
            duration = 0;
        }
        
        if (typeof options == 'object') {
            $.extend(options, {duration: duration});
        } else {
            options = {duration: duration};
        }
        
        if (degrees == 'toggle') {
            // Yes, jQuery has the toggle() event but that's only good for
            // clicks, and likewise hover() is only good for mouse in/out.
            // What if you want to toggle based on a timer or something else?
            if ($(this).data('rotate3Di.flipped')) {
                degrees = 'unflip';
                
            } else {
                degrees = 'flip';
            }
        }
        
        if (degrees == 'flip') {
            $(this).data('rotate3Di.flipped', true);

            var direction = -1;
            if (
                typeof options == 'object'
                && options['direction']
                && options['direction'] == 'clockwise'
            ) {
                direction = 1;
            }
            
            degrees = direction * 180;
            
        } else if (degrees == 'unflip') {
            $(this).data('rotate3Di.flipped', false);
            
            degrees = 0;
        }
        
        var d = $(this).data('rotate3Di.degrees') || 0;
        $(this).data(
            'rotate3Di.prevScale',
            calcRotate3Di.scale(calcRotate3Di.degrees(d))
        );
        $(this).animate({rotate3Di: degrees}, options);
    }
})(jQuery);

  /*
 * October Leaves plugin
 *
 * JavaScript API:
 * $('body').octoberLeaves({...}) // First load with options
 * $('body').octoberLeaves('stop') // Stop
 * $('body').octoberLeaves('start') // Start again
 *
 * Dependences:
 * - rotate3Di plugin (rotate3Di.min.js)
 */

+function ($) { "use strict";

    // Params
    var Ypos = [],
        Xpos = [],
        Speed = [],
        startYPos = [],
        CStrafe = [],
        Strafe = [],
        rotationAll = [],
        height = [],
        width = [],
        counter = 0,
        opacityLeaf = []

    // OCTOBER LEAVES CLASS DEFINITION
    // ============================

    var OctoberLeaves = function(element, options) {
        var self       = this
        this.options   = options
        this.$el       = $(element)

        this.timer = null
        this.winWidth = $(window).width()
        this.winHeight = $(window).height()

        // Init
        this.start()
    }

    OctoberLeaves.DEFAULTS = {
        leafStyles: 3,      // Number of leaf styles in the sprite (leaves.png)
        speedC: 2,          // Speed of leaves
        rotation: 1,        // Define rotation of leaves
        rotationTrue: 1,    // Whether leaves rotate (1) or not (0)
        numberOfLeaves: 15, // Number of leaves
        size: 40,           // General size of leaves, final size is calculated randomly (with this number as general parameter)
        cycleSpeed: 30      // Animation speed (Inverse frames per second) (10-100)
    }

    OctoberLeaves.prototype.start = function() {
        if (this.timer !== null)
            return

        for (var i = 0 ;i < this.options.numberOfLeaves;i++){

            // Pick a leaf style
            var randomLeaf = Math.floor(Math.random() * this.options.leafStyles) + 1;

            // Random width and height according to chosen parameter
            width[i] = Math.round(Math.random() * this.options.size + 20);
            height[i] = Math.round(Math.random() * this.options.size + 20);
            if (width[i] > height[i] *1.5 || height[i] > width[i] * 1.5)
                width[i] = height[i];

            // Starting y position of leaves
            Ypos[i] = -Math.random() * 500 - 40;

            // Randomization of x position of leaves
            Xpos[i] = Math.round(Math.random() * (this.winWidth) - width[i] * 3);
            opacityLeaf[i] = 0.3;

            // Speed of leaves
            Speed[i] = Math.random() * this.options.speedC + 2;

            // Rotation of leaves
            rotationAll[i] = Math.round(Math.random()) * this.options.rotation + Speed[i];
            CStrafe[i]=0;

            // Strength of right/left strafe
            Strafe[i] = Math.random() * 0.06 + 0.05;

            var img = $('<div />').attr('id', 'octoberLeaf'+i)
                .addClass('october-leaf leaf-style'+randomLeaf)
                .css({
                    top: Ypos[i],
                    left: Xpos[i],
                    height: height[i],
                    width: width[i],
                    opacity: opacityLeaf[i],
                    backgroundSize: width[i] + 'px ' + (height[i] * this.options.leafStyles) + 'px',
                    backgroundPosition: '0 ' + height[i] * (randomLeaf - 1) + 'px'
                })

            $('body').append(img)
        }

        this.timer = setInterval($.proxy(this.leafCycle, this), this.options.cycleSpeed)
    }

    OctoberLeaves.prototype.stop = function() {
        if (this.timer) {
            clearInterval(this.timer)
            this.timer = null

            // Destroy all the leaves
            $('.october-leaf').fadeOut(500, function(){
                $(this).remove()
            })
        }
    }

    OctoberLeaves.prototype.leafCycle = function() {
        for (var i = 0; i < this.options.numberOfLeaves; i++) {

            // Strafe
            var strafeY = Speed[i] * Math.sin(90 * Math.PI / 180),
                strafeX = Speed[i] * Math.cos(CStrafe[i]);

            rotationAll[i] += this.options.rotation + Speed[i];
            Ypos[i] += strafeY;
            Xpos[i] += strafeX;

            // Opacity
            if (Ypos[i] < 0){
                opacityLeaf[i] = 1;
                $('#octoberLeaf'+i).css({opacity:opacityLeaf[i]});
            }

            // Leaves slowly disappearing at the end of browser window
            if (Ypos[i] > this.winHeight - height[i] * 4){
                opacityLeaf[i] -= 0.05;
                $('#octoberLeaf' + i).css({opacity:opacityLeaf[i]});
            }

            // When leaves reach certain browser height they are transported back to the begining
            if (Ypos[i] > this.winHeight - (width[i] + height[i]/2)){
                Ypos[i] =- 50;
                Xpos[i] = Math.round(Math.random() * this.winWidth-width[i] * 4);
                Speed[i] = Math.random() * this.options.speedC + 2;
            }

            // Rotation is applied or not
            if (this.options.rotationTrue == 1){
                $('#octoberLeaf'+i).css({top: Ypos[i], left: Xpos[i]});
                $('#octoberLeaf'+i).rotate3Di(rotationAll[i], 0);
            }
            else if (this.options.rotationTrue == 0){
                $('#octoberLeaf'+i).css({top: Ypos[i], left: Xpos[i]});
            }

            CStrafe[i] += Strafe[i];
        }
    }

    // OCTOBER LEAVES PLUGIN DEFINITION
    // ============================

    var old = $.fn.octoberLeaves

    $.fn.octoberLeaves = function (option) {
        var args = Array.prototype.slice.call(arguments, 1)
        return this.each(function () {
            var $this   = $(this)
            var data    = $this.data('oc.leaves')
            var options = $.extend({}, OctoberLeaves.DEFAULTS, $this.data(), typeof option == 'object' && option)
            if (!data) $this.data('oc.leaves', (data = new OctoberLeaves(this, options)))
            else if (typeof option == 'string') data[option].apply(data, args)
        })
    }

    $.fn.octoberLeaves.Constructor = OctoberLeaves

    // OCTOBER LEAVES NO CONFLICT
    // =================

    $.fn.octoberLeaves.noConflict = function () {
        $.fn.octoberLeaves = old
        return this
    }

    // OCTOBER LEAVES DATA-API
    // ===============

}(window.jQuery);

